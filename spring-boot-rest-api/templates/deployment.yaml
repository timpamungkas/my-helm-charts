apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-boot-rest-api.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "spring-boot-rest-api.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- with .Values.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "spring-boot-rest-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "spring-boot-rest-api.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.actuatorPort }}"
        prometheus.io/path: {{ .Values.prometheusPath }}
        {{- range .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spring-boot-rest-api.serviceAccountName" . }}
      containers:
        - name: {{ include "spring-boot-rest-api.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.applicationPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.health.liveness.path }}
              port: {{ .Values.health.liveness.port }}
            initialDelaySeconds: {{ .Values.health.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.health.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.health.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.health.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.health.readiness.path }}
              port: {{ .Values.health.readiness.port }}
            initialDelaySeconds: {{ .Values.health.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.health.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.health.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.health.readiness.failureThreshold }}
          resources:
            {{- get .Values.sizemap .Values.size | pluck "resources" | first | toYaml | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp/
            {{- with .Values.extraVolumeMounts }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
          env:
            - name: JAVA_OPTS
              value: {{ get .Values.sizemap .Values.size | pluck "java-options" | first | quote }}
            {{- with .Values.extraEnv }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- with .Values.extraVolumes }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
